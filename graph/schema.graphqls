# GraphQL schema example
#
# https://gqlgen.com/getting-started/

interface Node {
  # The ID of the object.
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Competition implements Node{
  id: ID!
  year: String!
  country: String!
}

type CompetitionConnection{
  edges: [CompetitionEdge]
  pageInfo: PageInfo!
}

type CompetitionEdge {
  cursor: String!
  node: Competition
}

type Match implements Node{
  id: ID!
  year: Int!
  stage: String!
  stadium: String!
  city: String!
#  roundId: Int!
#  matchId: Int!
#  homeTeamName: String!
#  awayTeamName: String!
}

type MatchConnection{
  edges: [MatchEdge]
  pageInfo: PageInfo!
}

type MatchEdge {
  cursor: String!
  node: Match
}


input Filter {
  eq: String! = ""
  regex: String! = ""
}

type Player {
  name: String!
  matchList: [Match]
}

type Query {
  allCompetition(first: Int, last: Int, after: String, before: String): CompetitionConnection
  allMatch(first: Int, last: Int, after: String, before: String): MatchConnection
  allPlayer(filterPlayerName: Filter! = {}): [Player]!
  node(id: ID!): Node
}

# type Mutation {
# }
